{"version":3,"sources":["components/ad1.png","components/layout/header.js","components/layout/navbar.js","components/TodoItem.js","components/Todos.js","components/AddTodo.js","components/Filter.js","components/SaveTodos.js","components/About.js","components/Contacts.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","headerStyle","background","color","textAlign","padding","Header","style","Navbar","className","type","data-toggle","data-target","id","to","TodoItem","getStyle","borderBottom","textDecoration","props","todo","completed","markComplete","e","console","log","this","title","period","align","onChange","bind","checked","font","onClick","delTodo","btnStyle","class","name","React","Component","border","borderRadius","cursor","float","Todos","todos","map","key","AddTodo","state","setState","target","value","onSubmit","preventDefault","addTodo","display","placeholder","flex","height","width","required","aria-label","aria-describedby","pattern","Filter","filter","onSubmit1","onClick1","nofilter","About","Fragment","Contacts","App","localStorage","setItem","JSON","stringify","titletext","toLowerCase","indexOf","getItem","parse","removeItem","savetodos","alert","len","length","max_id","i","newTodo","sort","a","b","len_a","genreA","Number","parseInt","substring","len_b","genreB","comparison","exact","path","render","component","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.94aed83e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ad1.09b1335b.png\";","import React from 'react';\r\n\r\nfunction Header() {\r\n    return (\r\n        <header style={headerStyle}>\r\n            <h1>TodoList</h1>\r\n\r\n        </header>\r\n    )\r\n}\r\nconst headerStyle = {\r\n    background: '#A0522D',\r\n    color: '#fff',\r\n    textAlign: 'center',\r\n    padding: '10px',\r\n}\r\n\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Navbar() {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-md navbar-light bg-light sticky-top\">\r\n            <div className=\"container-fluid\">\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\r\n                        data-target=\"#navbarResponsive\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarResponsive\">\r\n                    <ul className=\"navbar-nav ml-auto\">\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/#\" className=\"nav-link\" id=\"main\">Главная</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/contacts\" className=\"nav-link\" id=\"contacts\">Контакты</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/about\" className=\"nav-link\" id=\"about\">О нас</Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n    }\r\n// const LinkStyle = {\r\n//     color: #fff,\r\n//     text-decoration: none,\r\n// }\r\n\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass TodoItem extends React.Component{\r\n    getStyle = () => {\r\n        return {\r\n            background: '#f4f4f4',\r\n            padding: '5px',\r\n            borderBottom: '1px #ccc dotted',\r\n            textDecoration: this.props.todo.completed ? 'line-through' : 'none'\r\n        }\r\n        };\r\n\r\n    markComplete = (e) => {\r\n        console.log(this.props)\r\n    };\r\n\r\n    //при изменении срока выполнения задачи (приоритетности)\r\n    // onChange = (e) => this.setState({\r\n    //     [e.target.name]: e.target.value\r\n    // });\r\n\r\n    render() {\r\n        const {id, title, period, completed} = this.props.todo;\r\n        return (\r\n            <div style={this.getStyle()}>\r\n                <p align='left'>\r\n                    <input type=\"checkbox\"\r\n                           onChange={this.props.markComplete.bind(this, id)} checked={ completed ? 'checked': '' }/> {' '}\r\n                    { title }{' '}<span style={{color: 'blue', font: '30pt'}}>{ period }</span>{' '}\r\n                    <button onClick={this.props.delTodo.bind(this, id)}\r\n                            style={btnStyle}\r\n                            class=\"btn btn-outline-danger\" name={id}>х</button>\r\n                </p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst btnStyle = {\r\n    // background: '#ff0000',\r\n    // color: '#fff',\r\n    border: 'none',\r\n    padding: '5px 9px',\r\n    borderRadius:'50%',\r\n    cursor: 'pointer',\r\n    float:'right'\r\n};\r\n\r\nTodoItem.propTypes = {\r\n    todo: PropTypes.object.isRequired\r\n};\r\n\r\nexport default TodoItem;","import React from 'react';\r\nimport TodoItem from \"./TodoItem\";\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nclass Todos extends React.Component{\r\n    // markComplete =() => {\r\n    //     console.log(\"Hello\")\r\n    // };\r\n    render() {\r\n        return this.props.todos.map(\r\n            (todo) => (\r\n                <TodoItem key={todo.id}\r\n                          todo={todo}\r\n                          period = {todo.period}\r\n                          markComplete={this.props.markComplete}\r\n                          delTodo={this.props.delTodo}\r\n                />\r\n\r\n            ));\r\n    }\r\n}\r\n\r\nTodos.propTypes = {\r\n    todos: PropTypes.array.isRequired\r\n};\r\n\r\nexport default Todos;\r\n\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport class AddTodo extends Component {\r\n    state = {\r\n        title: '',\r\n        period: ''\r\n    };\r\n    onChange = (e) => this.setState({\r\n        [e.target.name]: e.target.value\r\n    });\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.addTodo(this.state.title, this.state.period);\r\n        this.setState({title: '', period: ''});\r\n\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.onSubmit}\r\n                  style={{display: 'flex'}}>\r\n\r\n                <div className=\"container\">\r\n                    <div className=\"row no-gutters\">\r\n                        <div class=\"col-sm\">\r\n\r\n                <input type='text'\r\n                       name='title'\r\n                       placeholder='Введите дело'\r\n                       style={{flex: '10', height: '40px', width: '100%'}}\r\n                       value={this.state.title}\r\n                       onChange={this.onChange}\r\n                       class=\"form-control\" //bootstrap\r\n                    required\r\n                />\r\n\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                            <div className=\"input-group-append\" >\r\n                <input type=\"number\"\r\n                       name=\"period\"\r\n                       value={this.state.period}\r\n                       onChange={this.onChange}\r\n                       className=\"form-control\"\r\n                       placeholder=\"Срок выполнения\" //bootstrap\r\n                       aria-label=\"Recipient's username\"\r\n                       aria-describedby=\"basic-addon2\"\r\n                       style={{width: '76%', height: '40px' }}\r\n                       pattern=\"[0-9]{,3}\"\r\n                       required\r\n                />\r\n                        <span className=\"input-group-text\" id=\"basic-addon2\" style={{width: '24%', display: 'inline', height: '40px'}}>days</span>\r\n                    </div>\r\n\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n\r\n                <input type='submit'\r\n                       value='Добавить'\r\n                       className='btm'\r\n                       // role=\"button\" //bootstrap\r\n                       class=\"btn btn-outline-primary\" //bootstrap\r\n                       style={{flex: '1', height: '40px', width: '100%'}}\r\n                />\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </form>\r\n        );\r\n    }\r\n}\r\nAddTodo.propTypes = {\r\n    addTodo: PropTypes.func.isRequired\r\n};\r\nexport default AddTodo;\r\n\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AddTodo from \"./AddTodo\";\r\n\r\nexport class Filter extends Component {\r\n    state = {\r\n        title: '',\r\n        filter: '',\r\n    };\r\n    onChange = (e) => this.setState({\r\n        [e.target.name]: e.target.value\r\n    });\r\n\r\n    onSubmit1 = (e) => {\r\n        e.preventDefault();\r\n        this.props.filter(this.state.title, this.state.filter);\r\n        this.setState({title: '', filter: ' '});\r\n    };\r\n\r\n    onClick1 = (e) => { //отмена фильтра\r\n        e.preventDefault();\r\n        this.props.nofilter();\r\n\r\n        // alert(JSON.parse(localStorage.getItem('todos')));\r\n        // this.setState({ todos: JSON.parse(localStorage.getItem('todos')) });\r\n        // localStorage.removeItem(\"todos\");\r\n\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <form\r\n                  style={{display: 'flex'}}>\r\n\r\n                <div className=\"container\">\r\n                    <div className=\"row no-gutters\">\r\n                        <div className=\"col-sm\">\r\n\r\n                <input type='text'\r\n                       name='title'\r\n                       placeholder='Поиск'\r\n                       style={{flex: '10', height: '40px', width: '100%'}}\r\n                       value={this.state.title}\r\n                       onChange={this.onChange}\r\n                       class=\"form-control\" //bootstrap\r\n                />\r\n\r\n                {/*<input type='submit'*/}\r\n                {/*       value='Фильтровать'*/}\r\n                {/*       className='btm'*/}\r\n                {/*    // role=\"button\" //bootstrap*/}\r\n                {/*       class=\"btn btn-outline-secondary\" //bootstrap*/}\r\n                {/*       style={{flex: '1', height: '40px'}}*/}\r\n                {/*/>*/}\r\n                        </div>\r\n                        <div className=\"col-sm\">\r\n\r\n                <button\r\n                    // type='submit'\r\n                    //    value='Фильтровать'\r\n                       className='btm'\r\n                       onClick={this.onSubmit1}\r\n                    // role=\"button\" //bootstrap\r\n                       className=\"btn btn-outline-secondary\" //bootstrap\r\n                       style={{flex: '1', height: '40px', width: '100%'}}\r\n                >Фильтровать</button>\r\n\r\n            </div>\r\n            <div className=\"col-sm\">\r\n\r\n                <button\r\n                    // type='submit'\r\n                       // value='Отменить фильтр'\r\n                       className='btm'\r\n                       onClick={this.onClick1}\r\n                    // role=\"button\" //bootstrap\r\n                       className=\"btn btn-outline-danger\" //bootstrap\r\n                       style={{flex: '1', height: '40px', width: '100%'}}\r\n                >Отменить фильтр</button>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n}\r\nFilter.propTypes = {\r\n    filter: PropTypes.func.isRequired,\r\n    nofilter: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Filter;\r\n\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport class SaveTodos extends Component {\r\n    state = {\r\n        title: '',\r\n    };\r\n    // onChange = (e) => this.setState({\r\n    //     [e.target.name]: e.target.value\r\n    // });\r\n\r\n    onClickSave = (e) => {\r\n        // e.preventDefault();\r\n        // this.props.addTodo(this.state.title);\r\n        // this.setState({title: ''});\r\n        // alert('saving todos');\r\n        e.preventDefault();\r\n        this.props.savetodos();\r\n        // this.setState({title: ''});\r\n\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <form\r\n                  style={{display: 'flex'}}>\r\n\r\n                {/*<input type='submit'*/}\r\n                {/*       value='Добавить'*/}\r\n                {/*       className='btm'*/}\r\n                {/*    // role=\"button\" //bootstrap*/}\r\n\r\n                {/*       class=\"btn btn-outline-primary\" //bootstrap*/}\r\n                {/*       style={{flex: '1', height: '40px'}}*/}\r\n                {/*/>*/}\r\n\r\n                <button\r\n                    // type='submit'\r\n                    //    value='Фильтровать'\r\n                    className='btm'\r\n                    onClick={this.onClickSave}\r\n                    // role=\"button\" //bootstrap\r\n                    className=\"btn btn-outline-success\" //bootstrap\r\n                    style={{flex: '1', height: '40px'}}\r\n                >Сохранить список дел</button>\r\n\r\n                {/*<button*/}\r\n                {/*    // type='submit'*/}\r\n                {/*    //    value='Фильтровать'*/}\r\n                {/*    className='btm'*/}\r\n                {/*    onClick={this.onClickSave}*/}\r\n                {/*    // role=\"button\" //bootstrap*/}\r\n                {/*    className=\"btn btn-outline-success\" //bootstrap*/}\r\n                {/*    style={{flex: '1', height: '40px'}}*/}\r\n                {/*>Показать сохраненный список дел</button>*/}\r\n\r\n            </form>\r\n        );\r\n    }\r\n}\r\nSaveTodos.propTypes = {\r\n    savetodos: PropTypes.func.isRequired\r\n};\r\nexport default SaveTodos;\r\n\r\n","import React from 'react';\r\nimport ad from './ad1.png';\r\n\r\nconst About = () => {\r\n    return (\r\n        <React.Fragment>\r\n            {/*<h1>FUN</h1>*/}\r\n            <h3>О нас</h3>\r\n            {/*<img alt=\"Картинка с рекламой1\" src=\"/src/components/ad1.png\" />*/}\r\n            {/*<br/>*/}\r\n\r\n            {/*<img alt=\"Картинка с рекламой2\" src={ad} width=\"100px\" height=\"100px\" title=\"Тут есть картинка!\"/>*/}\r\n            {/*картинка вверху*/}\r\n            {/*<br/>*/}\r\n\r\n            {/*<img alt=\"Картинка с рекламой4\" src={require('./images/ad1.png')} />*/}\r\n            {/*<img src={process.env.PUBLIC_URL + '/images/ad1.png'} alt=\"logo\" />*/}\r\n            {/*<img alt=\"Картинка с рекламой3\" src=\"/images/ad1.png\" />*/}\r\n            {/*<img src={require('/src/ad1.png')}/>*/}\r\n            здесь всякая инфа о нас\r\n        </React.Fragment>\r\n    )\r\n};\r\n\r\nexport default About;","import React from 'react';\r\n\r\n// let Mailto = require('react-mailto');\r\nconst Contacts = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <h3>Контакты</h3>\r\n            <p>todo@ya.ru</p>\r\n            {/*<p><a href=\"mailto:polin-mart@ya.ru\">E-mail:</a></p>*/}\r\n            {/*<Mailto email=\"j@sonbellamy.com\" obfuscate={true}>*/}\r\n            {/*    Email me!*/}\r\n            {/*</Mailto>*/}\r\n\r\n            {/*<style>#contacts {*/}\r\n            {/*    color: red;*/}\r\n            {/*}*/}\r\n            {/*</style>*/}\r\n        </React.Fragment>\r\n    )\r\n};\r\n\r\nexport default Contacts;","import React from 'react';\r\nimport './App.css';\r\nimport Header from \"./components/layout/header\";\r\nimport Navbar from \"./components/layout/navbar\";\r\nimport Todos from './components/Todos';\r\nimport AddTodo from './components/AddTodo';\r\nimport Filter from './components/Filter';\r\nimport SaveTodos from './components/SaveTodos';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport About from './components/About';\r\nimport Contacts from './components/Contacts';\r\n\r\n\r\nclass App extends React.Component{\r\n    state = {\r\n        todos:[\r\n            {\r\n                id: 1,\r\n                title: 'Построить дом',\r\n                period: '3 days',\r\n                completed: false,\r\n            },\r\n            {\r\n                id: 2,\r\n                title: 'Посадить дерево',\r\n                period: '4 days',\r\n                completed: true,\r\n            },\r\n            {\r\n                id: 3,\r\n                title: 'Сделать лабу 3.2',\r\n                period: '41 days',\r\n                completed: false,\r\n            },\r\n        ]\r\n    };\r\n\r\n    markComplete =(id) => {\r\n        this.setState({ todos: this.state.todos.map(todo =>{\r\n                if (todo.id === id) {\r\n                    todo.completed = !todo.completed;\r\n                }\r\n                return todo;\r\n            }) });\r\n    };\r\n\r\n    delTodo = (id) => {\r\n        // alert(id);\r\n        this.setState({todos: [...this.state.todos.filter(todo => todo.id !== id)]} , () => localStorage.setItem('saved_todos', JSON.stringify(this.state.todos))  );\r\n        // localStorage.setItem('saved_todos', JSON.stringify(this.state.todos));\r\n    };\r\n\r\n    componentWillMount() {\r\n        // alert('hereeeee');\r\n        localStorage.getItem('saved_todos') && this.setState({\r\n            todos: JSON.parse(localStorage.getItem('saved_todos'))\r\n        })\r\n    }\r\n\r\n    filter = (titletext) => {\r\n        // alert(titletext);\r\n        // const len = this.state.todos.length;\r\n        // localStorage.setItem( 'SelectedOption', option );\r\n        localStorage.setItem('todos', JSON.stringify(this.state.todos));\r\n\r\n        this.setState({todos: [...this.state.todos.filter(todo => todo.title.toLowerCase().indexOf(titletext.toLowerCase()) != -1 )]});\r\n\r\n        // for (let i = 0; i < len; i++) {\r\n        //\r\n        //     this.setState({todos: [...this.state.todos.filter(todo => todo.title.toLowerCase() === title.toLowerCase())]});\r\n            // alert(this.state.todos[i].title.toLowerCase()+ \" \"+ title.toLowerCase());\r\n        //     if (this.state.todos[i].title.toLowerCase().indexOf(title.toLowerCase()) != -1) {\r\n        //         alert(\"есть контакт\");\r\n        //         // this.setState({todos: [...this.state.todos.filter(todo => todo.title.toLowerCase() === title.toLowerCase())]});\r\n        //         this.setState({todos: [...this.state.todos[i]]});\r\n        //     }\r\n        // }\r\n        // alert(\"filter\");\r\n    };\r\n\r\n    nofilter = () => {\r\n        // alert(\"nofilter\");\r\n\r\n        if (localStorage.getItem('todos') !== null) {\r\n            // alert(\"herebhjdfbghj\");\r\n            this.setState({ todos: JSON.parse(localStorage.getItem('todos')) });\r\n            localStorage.removeItem(\"todos\");\r\n        }\r\n\r\n    };\r\n\r\n\r\n    // filter(titletext){\r\n    //     alert(titletext);\r\n    //     let filteredList = this.state.todos.title.filter(function(item){\r\n    //         return item.toLowerCase().search(text.toLowerCase())!== -1;\r\n    //     });\r\n    //     this.setState({items: filteredList});\r\n    //\r\n    //     let filteredData = this.state.data.fil\r\n    //     ter((item) =>{\r\n    //         return item.title.toLowerCase().indexOf(this.props.filterToChild) !== -1;\r\n    //     });\r\n    //\r\n    //     function filterBy(title) {\r\n    //         return this.state.todos.filter(item => item[title] === title);\r\n    //     }\r\n    //     this.setState(filterBy(this.state.todos, title));\r\n    //\r\n    //     this.setState(this.state.todos.filter(u => u.includes(this.state.filter)));\r\n    // }\r\n\r\n    // filter = (title) => {\r\n    //     alert(title);\r\n    //     this.setState({todos: [...this.state.todos.filter(todo => todo.title !== title)]});\r\n    // };\r\n\r\n    // filter = (titlefilter) => {\r\n    //     // alert(titlefilter);\r\n    //     // let filteredPoets = this.state.title;\r\n    //     let filteredPoets = this.state.todos.filter((title) => {\r\n    //         alert(title);\r\n    //         let poetName = title.toLowerCase();\r\n    //         return poetName.indexOf(\r\n    //             titlefilter.toLowerCase()) !== -1\r\n    //     });\r\n    //     this.setState({\r\n    //         filteredPoets\r\n    //     })\r\n    // }\r\n\r\n    savetodos = () => {\r\n\r\n        // alert(title);\r\n        // this.setState({todos: [...this.state.todos.filter(todo => todo.title !== title)]});\r\n\r\n        if (localStorage.getItem('todos') !== null) {\r\n            alert (\"Сначала отмените фильтр!\");\r\n        }\r\n        else {\r\n            localStorage.setItem('saved_todos', JSON.stringify(this.state.todos));\r\n            alert(\"Пользовательский список дел сохранен!\");\r\n        }\r\n    };\r\n\r\n    addTodo = (title, period) => {\r\n\r\n        if (localStorage.getItem('todos') !== null) {\r\n            alert (\"Сначала отмените фильтр!\");\r\n        }\r\n        else {\r\n\r\n            const len = this.state.todos.length;\r\n            // const last_id = this.state.todos[len-1].id;\r\n\r\n            let max_id = 0;\r\n            for (var i = 0; i < len; i++) {\r\n                if (this.state.todos[i].id > max_id) {\r\n                    max_id = this.state.todos[i].id;\r\n                }\r\n            }\r\n            // alert(this.state.todos.id);\r\n            // let periods = [];\r\n            // for (var i = 1; i <= len; i++) {\r\n            //     periods.push(this.state.todos[i]);\r\n            // }\r\n\r\n            // let i = 0;\r\n            // let period_len = this.state.todos[0].period.length;\r\n            // // alert(period+ \" \"+ Number.parseInt(this.state.todos[i].period.substring(0, period_len-5)));\r\n            // while (period >= Number.parseInt(this.state.todos[i].period.substring(0, period_len-5)) && i<=len-1) {\r\n            //     i++;\r\n            //     period_len = this.state.todos[i].period.length;\r\n            //     // alert(period+ \" \"+ Number.parseInt(this.state.todos[i].period.substring(0, period_len-5)));\r\n            // }\r\n\r\n            const newTodo = { //создается новое туду\r\n                id: max_id + 1,\r\n                title: title,\r\n                period: period + \" days\",\r\n                completed: false,\r\n            };\r\n\r\n            function compare(a, b) {\r\n                // Используем toUpperCase() для преобразования регистра\r\n                let len_a = a.period.length;\r\n                const genreA = Number.parseInt(a.period.substring(0, len_a - 5));\r\n                let len_b = b.period.length;\r\n                const genreB = Number.parseInt(b.period.substring(0, len_b - 5));\r\n\r\n                let comparison = 0;\r\n                // alert(genreA + \" \"+ genreB);\r\n                if (genreA > genreB) {\r\n                    comparison = 1;\r\n                    // alert(genreA + \">\" + genreB);\r\n                } else if (genreA < genreB) {\r\n                    comparison = -1;\r\n                    // alert(genreA + \"<\" + genreB);\r\n                }\r\n                return comparison;\r\n            }\r\n\r\n            this.setState({todos: [...this.state.todos, newTodo].sort(compare)}, () => localStorage.setItem('saved_todos', JSON.stringify(this.state.todos))  );\r\n            // localStorage.setItem('saved_todos', JSON.stringify(this.state.todos));\r\n\r\n            // alert(this.state.todos.sort(compare)[0].title + \" \"+ this.state.todos.sort(compare)[1].title + \" \"+ this.state.todos.sort(compare)[2].title);\r\n            // this.state.todos.sort(compare);  //сортировка туду\r\n            // this.state.todos = this.state.todos.sort(compare);\r\n            // // alert(this.state.todos.sort(compare)[0].title + \" \"+ this.state.todos.sort(compare)[1].title + \" \"+ this.state.todos.sort(compare)[2].title);\r\n            // this.setState({todos: [...this.state.todos]});\r\n            // alert(\"here\");\r\n        }\r\n    };\r\n\r\n    render() {\r\n\r\n        // if ((localStorage.getItem('saved_todos') !== null) && (localStorage.getItem('todos') == null)) { //что-то сохранено и фильтр не включен\r\n        //     // alert(\"Отображен пользовательский список дел\");\r\n        //     this.setState({ todos: JSON.parse(localStorage.getItem('saved_todos')) });\r\n        //     localStorage.removeItem(\"saved_todos\");\r\n        // }\r\n\r\n\r\n        return (\r\n            <Router>\r\n            <div className=\"App\">\r\n                <div className=\"container\">\r\n                    <Header/>\r\n                    <Navbar/>\r\n                    <Route exact path=\"/\" render={props => (\r\n                        <React.Fragment>\r\n                            <Filter filter={this.filter} nofilter={this.nofilter}/>\r\n                            {/*<Nofilter nofilter={this.nofilter} />*/}\r\n                    <AddTodo addTodo={this.addTodo} />\r\n                    {/*<SaveTodos savetodos={this.savetodos} />*/}\r\n                    <Todos todos={this.state.todos}\r\n                           markComplete={this.markComplete}\r\n                           delTodo={this.delTodo}\r\n                    />\r\n                        </React.Fragment>\r\n                    )} />\r\n\r\n                    <Route path=\"/contacts\" component={Contacts} />\r\n                    <Route path=\"/about\" component={About} />\r\n                </div>\r\n            </div>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}